{"version":3,"sources":["components/Details.tsx","components/Intro.tsx","components/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Details","props","topicClips","onClose","selectedValue","open","data","topicArray","hasOwnProperty","personData","topicObj","forEach","item","TopicName","clips","push","Object","keys","map","k","getTopicArrFromData","fullName","PersonFullName","Dialog","scroll","Box","sx","display","flexDirection","alignItems","margin","src","height","width","Typography","variant","alignSelf","topic","clip","VideoName","StartTime","EndTime","Button","href","VideoURL","Intro","classes","Container","className","intro","maxWidth","introTitle","gutterBottom","style","marginTop","introSubtitle","paragraph","theme","createTheme","useStyles","makeStyles","toolbar","backgroundColor","font","color","subFont","textAlign","whiteSpace","footer","renderCards","cardData","handleClickOpen","Fragment","Grid","xs","sm","md","Card","justifyContent","CardContent","CardMedia","component","image","imageUrl","alt","CardActions","size","onClick","FullName","title","ParseDataToCardList","result","undefined","console","log","Items","cardList","el","Home","useState","setOpen","setCardList","setPersonData","useEffect","a","axios","catch","err","fetchAllArticles","getPersonData","post","params","fetchClipsByPerson","ThemeProvider","CssBaseline","bgcolor","flexGrow","p","AppBar","position","zIndex","drawer","Toolbar","mr","fontSize","noWrap","py","align","marginBottom","container","spacing","Copyright","value","Date","getFullYear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c0a57c4.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Typography, Button, Box } from '@mui/material';\r\n\r\n\r\nconst renderTopicClips = (topicClips : any) => {\r\n  return (\r\n    <div>\r\n      {  \r\n        topicClips.map((topic : any)=>{\r\n          return (\r\n            <div>\r\n              <Typography variant=\"h6\" sx={{margin: '10px'}}>{topic.TopicName}</Typography>\r\n              {topic.clips.map((clip : any)=>{\r\n                return (\r\n                  <Box sx={{ display: 'flex', margin: '10px', alignItems: 'center'}}> \r\n                    <Typography>{clip.VideoName} {clip.StartTime} - {clip.EndTime} </Typography>\r\n                    <Button href={clip.VideoURL}> Watch </Button>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getTopicArrFromData = (personData: any) => {\r\n  const topicObj : any = {};\r\n  personData.forEach((item: any)=>{\r\n    if (!topicObj.hasOwnProperty(item.TopicName)){\r\n      topicObj[item.TopicName] = {TopicName: item.TopicName, clips: []};\r\n    } \r\n    topicObj[item.TopicName].clips.push(item);\r\n  });\r\n  let topicArray = Object.keys(topicObj).map((k) => topicObj[k])\r\n  return topicArray;\r\n}\r\n\r\n\r\nfunction Details(props : any) {\r\n  const { onClose, selectedValue, open, data } = props;\r\n  const topicArray = (data.hasOwnProperty('data'))? getTopicArrFromData(data.data) : [];\r\n\r\n  //TODO : get fullname from person record\r\n  const fullName = (data.hasOwnProperty('data'))? topicArray[0].clips[0].PersonFullName : \"\";\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} scroll={'body'}>\r\n      <Box sx={{display:'flex', flexDirection: 'column', alignItems:'flex-start', margin: '20px'}}>\r\n        <Box sx={{ display: 'flex', margin: '10px', alignItems:'flex-end'}}> \r\n          <img src='/images/unsplash-senate-building.jpg' height=\"200px\" width=\"200px\" />\r\n          <Typography variant=\"h4\" sx={{margin: '0 10px 0 10px'}}>{fullName}</Typography>\r\n        </Box>\r\n        <Typography variant=\"h6\" sx={{alignSelf: 'center'}}>Recent Discussions</Typography>\r\n        {renderTopicClips(topicArray)}\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport {Container, Box, Typography} from '@mui/material';\r\n\r\nconst Intro = (props : any) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Container className={classes.intro} maxWidth=\"lg\">\r\n        <Box sx={{maxWidth: '600px'}} >\r\n            <Typography variant=\"h3\" className={classes.introTitle} gutterBottom>\r\n            See clips from public speakers,\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.introTitle} gutterBottom>\r\n            with <strong>topics you care about.</strong>\r\n            </Typography>\r\n            <div style={{marginTop: '45px'}}>\r\n            <Typography variant=\"h6\" className={classes.introSubtitle} paragraph>\r\n            HearingRoom combines Symbl.ai and Machine Learning to create a catalogue of speaking points from videos of public figures.\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.introSubtitle} paragraph>\r\n            Each person has a list of topics and links to time-stamped videos that go directly to where they spoke.\r\n            </Typography>\r\n            </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default Intro;","import React, {useState, useEffect} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider, Theme } from '@mui/material/styles';\r\nimport {makeStyles} from '@mui/styles';\r\n\r\nimport StickyNote2Icon from '@mui/icons-material/StickyNote2';\r\nimport SpeakerNotesIcon from '@mui/icons-material/SpeakerNotes';\r\n\r\nimport Details from './Details';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from './NavBar';\r\nimport Intro from './Intro';\r\n\r\nconst theme = createTheme();\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n  toolbar: {\r\n    backgroundColor: '#5B8C5A',\r\n  },\r\n  intro: {\r\n    margin: \"20vh 0 20vh 0\",\r\n  },\r\n  font: {\r\n    color: \"#222\",\r\n  },\r\n  subFont : {\r\n    color: \"#696969\",\r\n  },\r\n  introTitle : {\r\n    color: \"#222\",\r\n    textAlign: 'left', \r\n    whiteSpace: 'nowrap'\r\n  },\r\n  introSubtitle: {\r\n    color: \"#696969\",\r\n    textAlign: 'left', \r\n  },\r\n  footer: {\r\n    backgroundColor: '#5B8C5A',\r\n    color: '#fff',\r\n    marginTop: '20vh'\r\n  }\r\n}));\r\n\r\nconst renderCards = (cardData :any, handleClickOpen : any) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {cardData.map((item : any)=>(\r\n        <Grid item key={item.title} xs={12} sm={6} md={4}>\r\n        <Card\r\n          sx={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center'}}\r\n        >\r\n          <Box sx={{ flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center'}}>\r\n            <CardContent>\r\n              <CardMedia\r\n              className=\"card-img\"\r\n              component=\"img\"\r\n              sx={{width:'180px', height: '240px'}}\r\n              image={item.imageUrl}\r\n              alt=\"random\"\r\n              />\r\n            </CardContent>\r\n            <CardActions sx={{display:'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n              <Button size=\"small\" onClick={()=>handleClickOpen(item.FullName)}>{item.FullName}</Button>\r\n            </CardActions>\r\n          </Box>\r\n        </Card>\r\n      </Grid>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ParseDataToCardList = (result: any) => {\r\n\r\n  /*\r\n  //Test data\r\n  var cardList : Array<Object> = [\r\n    {\r\n      'imageUrl' : '/images/unsplash-senate-building.jpg',\r\n      'FullName' : 'John Smith',\r\n    },\r\n    {\r\n      'imageUrl' : '/images/unsplash-senate-building.jpg',\r\n      'FullName' : 'Joe Perry',\r\n      \r\n    }\r\n  ];\r\n  */\r\n  \r\n  if (result === undefined || !result.hasOwnProperty('data')){\r\n    console.log(\"Err - Person query result undefined.\");\r\n    return [];\r\n  }\r\n\r\n  const Items = result.data.Items; \r\n  const cardList : any = [];\r\n\r\n  //Iterate through DynamoDB table items.\r\n  Items.forEach(function (item: any) {\r\n    const el = {\r\n      'imageUrl' : '/images/unsplash-senate-building.jpg', \r\n      'FullName' : item.FullName\r\n    };\r\n    cardList.push(el);\r\n  });\r\n\r\n\r\n  return cardList;\r\n}\r\n\r\n//Main component\r\nexport default function Home() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState<Boolean>(false);\r\n  const [cardList, setCardList] = useState<Array<Object>>([]);\r\n  const [personData, setPersonData] = useState<Object>({});\r\n\r\n  //Get initial records from DynamoDB\r\n  useEffect(() => {\r\n      async function fetchAllArticles() {\r\n        const result = await axios(\r\n          '/news-reader/people',\r\n        ).catch((err)=>{\r\n          console.log(\"request failed.\");\r\n        });\r\n        const cardData = ParseDataToCardList(result);\r\n        setCardList(cardData);\r\n      };\r\n      fetchAllArticles();\r\n      },\r\n    []\r\n  );\r\n\r\n\r\n  const handleClickOpen = (fullName : string) => {\r\n    //Get person's video clip data, update personData\r\n    getPersonData(fullName);\r\n  };\r\n\r\n  const getPersonData = (fullName : string) => {\r\n    async function fetchClipsByPerson () {\r\n      const result : any = await axios.post(\r\n        '/news-reader/clips', {params : {fullName}}\r\n      ).catch((err)=>{\r\n        console.log(\"request failed.\");\r\n      });\r\n      if (result != null){\r\n        setPersonData(result);\r\n      } else {\r\n        const data = {};\r\n        setPersonData(data);\r\n      }\r\n      setOpen(true);\r\n    };\r\n    fetchClipsByPerson();\r\n  }\r\n\r\n\r\n  const handleClose = (value : any) => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      {/* Side Navigation Bar */}\r\n      {/*<NavBar />*/}\r\n\r\n      {/* Hero unit */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          bgcolor: 'background.paper',\r\n          flexGrow: 1, \r\n          p: 0, \r\n          //width: { sm: `calc(100% + ${drawerWidth}px)`}\r\n        }}\r\n      >\r\n\r\n      <AppBar \r\n      sx={{\r\n        position: 'fixed',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n      }}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <SpeakerNotesIcon sx={{ mr: 2, fontSize: 40 }} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            HearingRoom\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Toolbar />\r\n\r\n      <Intro classes={classes}/>\r\n\r\n      <Container sx={{ py: 0 }} maxWidth=\"lg\">\r\n        <Typography variant=\"h3\" align=\"left\" sx={{marginBottom: '10vh'}}>\r\n          Speakers\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n            {renderCards(cardList, handleClickOpen)}\r\n        </Grid>\r\n      </Container>\r\n      </Box>\r\n\r\n\r\n    {/* Footer */}\r\n    <Box sx={{ p: 6 }} className={classes.footer} component=\"footer\">\r\n      <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\r\n        Thanks for checking out our hackathon project!\r\n      </Typography>\r\n      <Copyright />\r\n    </Box>\r\n\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n\r\n    {/* Details Dialog Box */}\r\n    <Details\r\n        open={open}\r\n        onClose={handleClose}\r\n        data={personData}\r\n    />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" align=\"center\">\r\n      {'Copyright © HearingRoom Hackathon Team '}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}