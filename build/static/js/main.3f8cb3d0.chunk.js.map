{"version":3,"sources":["components/Details.tsx","components/Intro.tsx","components/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["renderTopicClips","topics","topicArr","Object","entries","key","value","push","TopicName","clips","map","topic","Typography","variant","sx","margin","capitalize","clip","Box","display","alignItems","marginRight","VideoName","Button","href","TimestampURL","s","toUpperCase","slice","renderInfo","infoObj","infoArr","title","List","item","ListItem","flexDirection","padding","Details","props","onClose","selectedValue","open","data","hasOwnProperty","personData","Items","fullName","FullName","Dialog","scroll","Avatar","alt","src","Headshot","width","height","Info","alignSelf","marginTop","Topics","Intro","classes","Container","className","intro","maxWidth","introTitle","gutterBottom","component","fontWeight","style","introSubtitle","paragraph","theme","createTheme","typography","h3","color","whiteSpace","fontSize","useStyles","makeStyles","toolbar","backgroundColor","font","subFont","textAlign","marginBottom","footer","speakersTitle","renderCards","cardData","handleClickOpen","Fragment","Grid","xs","sm","md","Card","justifyContent","CardMedia","image","CardActions","size","onClick","ParseDataToCardList","result","undefined","console","log","cardList","forEach","el","Home","useState","setOpen","setCardList","setPersonData","useEffect","a","axios","catch","err","fetchAllArticles","getPersonData","post","params","fetchClipsByPerson","ThemeProvider","CssBaseline","bgcolor","flexGrow","p","AppBar","position","zIndex","drawer","Toolbar","mr","noWrap","py","align","container","spacing","Copyright","Date","getFullYear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f8cb3d0.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Typography, Button, Box, List, ListItem, Avatar } from '@mui/material';\r\n\r\n\r\n\r\nconst renderTopicClips = (topics : any) => {\r\n\r\n  const topicArr : any = [];\r\n  for (const [key, value] of Object.entries(topics)){\r\n    topicArr.push({TopicName: key, clips: value});\r\n  }\r\n\r\n  // topicArr structure => [{TopicName: \"taxes\", clips [{VideoName: \"name\", TimestampURL: \"http://...\"}] }, {...}]\r\n\r\n  \r\n  return (\r\n    <div>\r\n      {  \r\n        topicArr.map((topic : any)=>{\r\n          return (\r\n            <div>\r\n              <Typography variant=\"h6\" sx={{margin: '10px'}}>{capitalize(topic.TopicName)}</Typography>\r\n              {topic.clips.map((clip : any)=>{\r\n                return (\r\n                  <Box sx={{ display: 'flex', margin: '10px', alignItems: 'center'}}> \r\n                    <Typography sx={{marginRight: '20px'}}><strong>{clip.VideoName}</strong></Typography>\r\n                    <Button href={clip.TimestampURL} variant=\"outlined\"> Watch </Button>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst capitalize = (s : string) =>\r\n{\r\n    return s && s[0].toUpperCase() + s.slice(1);\r\n}\r\n\r\nconst renderInfo = (infoObj : any) =>{\r\n  const infoArr : any = [];\r\n  for (const [key, value] of Object.entries(infoObj)){\r\n    infoArr.push({title: key, value: value});\r\n  }\r\n  return (\r\n    <List sx={{margin: '0px'}}>\r\n      {infoArr.map((item: any)=>{\r\n        return(\r\n        <ListItem key={item.title} sx={{display: 'flex', flexDirection: 'row', margin: '0px', padding: '0px'}}>\r\n          <Typography sx={{marginRight: '10px'}}><strong>{item.title}</strong></Typography>\r\n          <Typography>{item.value}</Typography>\r\n        </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n\r\n}\r\n\r\nfunction Details(props : any) {\r\n  const { onClose, selectedValue, open, data } = props;\r\n\r\n  if (!data.hasOwnProperty('data')) return null;\r\n  const personData = data.data.Items[0];\r\n  const fullName = personData.FullName;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} scroll={'body'}>\r\n      <Box sx={{display:'flex', flexDirection: 'column', alignItems:'flex-start', margin: '20px'}}>\r\n        <Box sx={{ display: 'flex', margin: '10px', alignItems:'flex-end'}}> \r\n          \r\n          <Avatar \r\n          alt={fullName}\r\n          src={personData.Headshot}\r\n          sx={{ width: 200, height: 200 }}\r\n          variant=\"rounded\"\r\n          />\r\n\r\n          <Box sx={{display: 'flex', flexDirection: 'column', margin: '10px'}}>\r\n            <Typography variant=\"h4\">{personData.FullName}</Typography>\r\n            {renderInfo(personData.Info)}\r\n          </Box>\r\n        </Box>\r\n        <Typography variant=\"h5\" sx={{alignSelf: 'center', marginTop: '20px'}}>Recent Discussions</Typography>\r\n        {renderTopicClips(personData.Topics)}\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport {Container, Box, Typography} from '@mui/material';\r\n\r\nconst Intro = (props : any) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Container className={classes.intro} maxWidth=\"lg\">\r\n        <Box sx={{maxWidth: '600px'}} >\r\n            <Typography variant=\"h3\" className={classes.introTitle} gutterBottom>\r\n            See clips from public speakers,\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.introTitle} gutterBottom>\r\n            with <Box component=\"span\" fontWeight='bold'>topics you care about.</Box>\r\n            </Typography>\r\n            <div style={{marginTop: '45px'}}>\r\n            <Typography variant=\"h6\" className={classes.introSubtitle} paragraph>\r\n            HearingRoom combines Symbl.ai and Machine Learning to create a catalogue of speaking points from videos of public figures.\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.introSubtitle} paragraph>\r\n            Each person has a list of topics and links to time-stamped videos that go directly to where they spoke.\r\n            </Typography>\r\n            </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default Intro;","import React, {useState, useEffect} from 'react';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardMedia,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Toolbar,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { createTheme, ThemeProvider, Theme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport SpeakerNotesIcon from '@mui/icons-material/SpeakerNotes';\r\n\r\nimport Details from './Details';\r\nimport axios from 'axios';\r\n\r\nimport Intro from './Intro';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createTheme();\r\ntheme.typography.h3 = {\r\n  fontWeight:'normal',\r\n  color: \"#222\",\r\n  whiteSpace: 'normal',\r\n  fontSize: '2rem',\r\n    '@media (min-width:600px)': {\r\n      whiteSpace: 'nowrap',\r\n    fontSize: '3rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n  toolbar: {\r\n    backgroundColor: '#5B8C5A',\r\n  },\r\n  intro: {\r\n    margin: \"20vh 0 20vh 0\",\r\n    '@media (max-width: 600px)' : {\r\n      margin: \"10vh 0 10vh 0\",\r\n    }\r\n  },\r\n  font: {\r\n    color: \"#222\",\r\n  },\r\n  subFont : {\r\n    color: \"#696969\",\r\n  },\r\n  introTitle : {\r\n    color: \"#222\",\r\n    textAlign: 'left', \r\n    '@media (max-width: 600px)' : {\r\n      textAlign: 'center !important',\r\n      marginBottom: '0px !important',\r\n    }\r\n  },\r\n  introSubtitle: {\r\n    color: \"#696969\",\r\n    textAlign: 'left', \r\n    '@media (max-width: 600px)' : {\r\n      fontSize: '1.2rem !important',\r\n    }\r\n  },\r\n  footer: {\r\n    backgroundColor: '#5B8C5A',\r\n    color: '#fff',\r\n    marginTop: '20vh'\r\n  },\r\n  speakersTitle: {\r\n    marginBottom: '10vh',\r\n    '@media (max-width: 600px)' : {\r\n      fontSize: '2.4rem !important',\r\n      textAlign: 'center !important',\r\n    }\r\n  }\r\n}));\r\n\r\nconst renderCards = (cardData :any, handleClickOpen : any) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {cardData.map((item : any)=>(\r\n        <Grid item key={item.title} xs={12} sm={6} md={4}>\r\n        <Card\r\n          sx={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center'}}\r\n        >\r\n            <CardMedia\r\n            className=\"card-img\"\r\n            component=\"img\"\r\n            sx={{ height: '240px'}}\r\n            image={item.Headshot}\r\n            alt={item.FullName}\r\n            />\r\n          <CardActions sx={{display:'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            <Button size=\"small\" onClick={()=>handleClickOpen(item.FullName)}>{item.FullName}</Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ParseDataToCardList = (result: any) => {\r\n  \r\n  if (result === undefined || !result.hasOwnProperty('data')){\r\n    console.log(\"Err - Person query result undefined.\");\r\n    return [];\r\n  }\r\n\r\n  const Items = result.data.Items; \r\n  const cardList : any = [];\r\n\r\n  //Iterate through DynamoDB table items.\r\n  Items.forEach(function (item: any) {\r\n    console.log(item.Headshot);\r\n    const el = {\r\n      'Headshot' : item.Headshot, \r\n      'FullName' : item.FullName\r\n    };\r\n    cardList.push(el);\r\n  });\r\n\r\n\r\n  return cardList;\r\n}\r\n\r\n//Main component\r\nexport default function Home() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState<Boolean>(false);\r\n  const [cardList, setCardList] = useState<Array<Object>>([]);\r\n  const [personData, setPersonData] = useState<Object>({});\r\n\r\n  //Get initial records from DynamoDB\r\n  useEffect(() => {\r\n      async function fetchAllArticles() {\r\n        const result = await axios(\r\n          '/news-reader/all-people',\r\n        ).catch((err)=>{\r\n          console.log(\"request failed.\");\r\n        });\r\n        const cardData = ParseDataToCardList(result);\r\n        setCardList(cardData);\r\n      };\r\n      fetchAllArticles();\r\n      },\r\n    []\r\n  );\r\n\r\n\r\n  const handleClickOpen = (fullName : string) => {\r\n    //Get person's video clip data, update personData\r\n    getPersonData(fullName);\r\n  };\r\n\r\n  const getPersonData = (fullName : string) => {\r\n    async function fetchClipsByPerson () {\r\n      const result : any = await axios.post(\r\n        '/news-reader/person-details', {params : {fullName}}\r\n      ).catch((err)=>{\r\n        console.log(\"request failed.\");\r\n      });\r\n      if (result != null){\r\n        setPersonData(result);\r\n        setOpen(true);\r\n      } \r\n    };\r\n    fetchClipsByPerson();\r\n  }\r\n\r\n\r\n  const handleClose = (value : any) => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          bgcolor: 'background.paper',\r\n          flexGrow: 1, \r\n          p: 0, \r\n        }}\r\n      >\r\n\r\n      <AppBar \r\n      sx={{\r\n        position: 'fixed',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n      }}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <SpeakerNotesIcon sx={{ mr: 2, fontSize: 40 }} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            HearingRoom\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Toolbar />\r\n\r\n      <Intro classes={classes}/>\r\n\r\n      <Container sx={{ py: 0 }} maxWidth=\"lg\">\r\n        <Typography variant=\"h3\" align=\"left\" className={classes.speakersTitle}>\r\n          Speakers\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n            {renderCards(cardList, handleClickOpen)}\r\n        </Grid>\r\n      </Container>\r\n      </Box>\r\n\r\n\r\n    {/* Footer */}\r\n    <Box sx={{ p: 6 }} className={classes.footer} component=\"footer\">\r\n      <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\r\n        Thanks for checking out our hackathon project!\r\n      </Typography>\r\n      <Copyright />\r\n    </Box>\r\n\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n\r\n    {/* Details Dialog Box */}\r\n    <Details\r\n        open={open}\r\n        onClose={handleClose}\r\n        data={personData}\r\n    />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" align=\"center\">\r\n      {'Copyright © HearingRoom Hackathon Team '}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}